1. Which sorting algorithm was the fastest?
   - Merge Sort

2. Which sorting algorithm was the slowest?
   - Bubble Sort

3. What is the time complexity of each algorithm?
   - Bubble Sort: O(n^2)
   - Selection Sort: O(n^2)
   - Merge Sort: O(n log n)

4. Why is Merge Sort faster than Selection Sort and Bubble Sort?
   - Merge Sort uses a divide and conquer approach, reducing the number of comparisons. 
     Bubble Sort and Selection Sort require many comparisons even on large inputs.

5. When might Selection Sort be preferred over Merge Sort?
   - Selection Sort does not require extra memory, making it suitable for memory-constrained environments.

6. If an array is already sorted, which sorting algorithm performs best?
   - Bubble Sort (optimized version) can complete in O(n) time by detecting that no swaps are needed.

7. If an array is nearly sorted, which sorting algorithm performs best?
   - Bubble Sort (optimized) is the best, as it can detect the sorted portions and finish in fewer iterations.